<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <BitmapImage x:Key="AddIconImage1" UriSource="../icons/icons8-add-100.png"/>

    <SolidColorBrush x:Key="C_Defult_ButtonBackgroundBrush1" Color="#FF4F007F"/>
    
    <Color x:Key="C_MouseEnter_ButtonColor1">#412edb</Color>
    <Color x:Key="C_MouseLeave_ButtonColor1">#FF4F007F</Color>

    
    <!--// Dock Bar Button Style //-->

    <Style x:Key="DockBtnStyle2"
       TargetType="Button">

        <Setter Property="Height"
            Value="50" />

        <Setter Property="Width"
            Value="50" />

        <Setter Property="Background" Value="{StaticResource C_Defult_ButtonBackgroundBrush1}"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border2" BorderThickness="0" Background="{TemplateBinding Background}" Padding="5" CornerRadius="10">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>


                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <!--// Button Animation //-->

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)"
                                     To="65"
                                     Duration="0:0:0.3" />

                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)"
                                     To="65"
                                     Duration="0:0:0.3" />
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource C_MouseEnter_ButtonColor1}" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)"
                                     To="50"
                                     Duration="0:0:0.3" />

                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)"
                                     To="50"
                                     Duration="0:0:0.3" />
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource C_MouseLeave_ButtonColor1}" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--// Dock Bar Button Popup //-->


    <Style x:Key="PopupStyle2"
        TargetType="Popup">

        <Setter Property="AllowsTransparency"
        Value="True" />

        <Setter Property="VerticalOffset"
        Value="10" />

        <Setter Property="VerticalAlignment"
                Value="Center"/>

        <Setter Property="Height"
        Value="35" />

        <Setter Property="Placement"
        Value="Right" />

    </Style>

    <!--// Popup Border //-->

    <Style x:Key="border2"
       TargetType="Border">

        <Setter Property="Height"
            Value="27" />

        <Setter Property="Background"
            Value="#3eb3ff" />

        <Setter Property="CornerRadius"
            Value="4" />

        <Setter Property="VerticalAlignment"
            Value="Center" />

    </Style>

    <!--// Popup Text //-->

    <Style x:Key="PopupText2"
       TargetType="TextBlock">

        <Setter Property="Foreground"
            Value="#000000" />

        <Setter Property="FontFamily"
            Value="Roboto" />

        <Setter Property="FontSize"
            Value="16" />

        <Setter Property="VerticalAlignment"
            Value="Center" />

        <Setter Property="HorizontalAlignment"
            Value="Center" />

    </Style>

    <!--// Dock Bar Popup Arrow Path //-->

    <Style x:Key="ArrowPath2"
       TargetType="Path">

        <Setter Property="HorizontalAlignment"
            Value="Center" />

        <Setter Property="VerticalAlignment"
            Value="Center" />

        <Setter Property="Data"
            Value="M0,0 L8,8 16,0 L0,0" />

        <Setter Property="Fill"
            Value="#3eb3ff" />

        <Setter Property="Height"
            Value="8" />

        <Setter Property="Width"
            Value="16" />

        <Setter Property="Stroke"
            Value="#3eb3ff" />

        <Setter Property="Stretch"
            Value="None" />

        


        <!-- Adding the RotateTransform to rotate the arrow -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="0.9" ScaleY="1.6"/>
                    <!-- Adjust ScaleX and ScaleY to scale the arrow -->
                    <RotateTransform Angle="90" CenterX="1" CenterY="1"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin"
         Value="0.5,0.5" />

    </Style>

</ResourceDictionary>